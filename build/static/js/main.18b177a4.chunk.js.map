{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","search","handleSearch","type","value","onChange","PersonForm","props","onSubmit","add","newName","changeNewName","newNumber","changeNewNumber","Person","person","deleteHandler","name","number","onClick","Notification","notification","style","border","background","display","message","baseUrl","axios","get","then","response","data","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","setNotification","useEffect","personsService","personsToShow","filter","toLowerCase","indexOf","event","target","preventDefault","some","window","confirm","existingPerson","find","changedPerson","updatedPerson","map","setTimeout","catch","error","addedPerson","concat","key","personToDelete","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18b177a4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ search, handleSearch }) => (\n  <div>\n    Filter: <input type=\"text\" value={search} onChange={handleSearch} />\n  </div>\n);\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.add}>\n    <div>\n      name: <input type=\"text\" value={props.newName} onChange={props.changeNewName} />\n    </div>\n    <div>\n      number: <input type=\"text\" value={props.newNumber} onChange={props.changeNewNumber} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n  ","import React from 'react';\n\nconst Person = ({ person, deleteHandler }) => (\n  <p>\n    {person.name}: {person.number}\n    <button onClick={deleteHandler}>delete</button>\n  </p>\n);\n\nexport default Person;","import React from 'react';\n\nconst Notification = ({ notification }) => {\n\n  const successStyle = {\n    border: \"3px solid green\",\n    background: \"lawngreen\",\n    display: \"inline-block\"\n  };\n\n  const errorStyle = {\n    border: \"3px solid red\",\n    background: \"indianred\",\n    display: \"inline-block\"\n  };\n\n  if (notification === null) \n    return null;\n\n  if (notification.type === \"success\") {\n    return (\n      <div style={successStyle}>\n        {notification.message}\n      </div>\n    );\n  }\n\n  if (notification.type === \"error\") {\n    return (\n      <div style={errorStyle}>\n        {notification.message}\n      </div>\n    );\n  }\n};\n\nexport default Notification;","import axios from 'axios';\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst save = person => {\n  const request = axios.post(baseUrl, person);\n  return request.then(response => response.data);  \n};\n\nconst update = (id, person) => {\n  const request = axios.put(`${baseUrl}/${id}`, person);\n  return request.then(response => response.data);\n};\n\nconst remove = id => axios.delete(`${baseUrl}/${id}`);\n\nexport default {\n  getAll,\n  save,\n  update,\n  remove\n};","import React, { useState, useEffect } from 'react';\n\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Person from './components/Person';\nimport Notification from './components/Notification';\n\nimport personsService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(persons => setPersons(persons));\n  }, []);\n\n  const personsToShow = search \n    ?  persons.filter(person => person.name.toLowerCase().indexOf(search.toLowerCase()) > -1)\n    : persons;\n\n  const changeNewName = event => setNewName(event.target.value);\n  const changeNewNumber = event => setNewNumber(event.target.value);\n  const changeSearch = event => setSearch(event.target.value);\n\n  const addPerson = event => {\n    event.preventDefault();\n    \n    if (persons.some(person => person.name === newName)) {\n      if (window.confirm(`${newName} is already added to the phonebook.` \n        + `Do you want to replace the old number with new one`)) {\n\n          const existingPerson = persons.find(person => person.name === newName);\n          const changedPerson = {...existingPerson, number: newNumber};\n          personsService\n            .update(changedPerson.id, changedPerson)\n            .then(updatedPerson => {\n              setPersons(persons.map(person => \n                person.id !== updatedPerson.id ? person : updatedPerson));\n\n                setNotification({\n                  type: \"success\",\n                  message: `${updatedPerson.name} 's number successfully updated.`\n                });\n                setTimeout(() => setNotification(null), 5000);\n              })\n            .catch(error => {\n              setNotification({\n                type: \"error\",\n                message: error.response.data.error\n              });\n              setTimeout(() => setNotification(null), 5000);\n            });\n      }\n    }\n    else {\n      const newPerson = { \n        name: newName, \n        number: newNumber\n      };\n      personsService\n        .save(newPerson)\n        .then(addedPerson => {\n          setPersons(persons.concat(addedPerson));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setNotification({\n            type: \"success\",\n            message: `Person ${addedPerson.name} successfully added.`\n          });\n          setTimeout(() => setNotification(null), 5000);\n        })\n        .catch(error => {\n          setNotification({\n            type: \"error\",\n            message: error.response.data.error\n          });\n          setTimeout(() => setNotification(null), 5000);\n        });\n    }\n  };\n\n  const deletePerson = id => {\n    const personToDelete = persons.find(person => person.id ===id);\n    if (window.confirm(`Delete ${personToDelete.name}?`)) {\n      personsService\n        .remove(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id));\n          setNotification({\n            type: \"error\",\n            message: `Person ${personToDelete.name} successfully deleted.`\n          });\n          setTimeout(() => setNotification(null), 5000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter search={search} handleSearch={changeSearch} />\n      <h2>Add new person</h2>\n      <Notification notification={notification} />\n      <PersonForm \n        add={addPerson}\n        newName={newName} changeNewName={changeNewName}\n        newNumber={newNumber} changeNewNumber={changeNewNumber}\n      />\n      <h2>Numbers</h2>\n      <div>\n        {personsToShow.map(person => \n          <Person key={person.id} person={person} deleteHandler={() => deletePerson(person.id)} />\n        )}\n      </div> \n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}